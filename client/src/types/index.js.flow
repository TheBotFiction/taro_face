/**
 * @flow
 */

type TermType = {
  id?: number,
  term: string,
  meaning?: string,
  reading?: string,
  samplePhrases?: Array<SamplePhraseType>,
  similars?: Array<TermType>
}

type SamplePhraseType = {
  id?: number,
  phrase: string,
  term?: TermType
}

type PaperSheetType$ChosenQuestion = {
  term: TermType,
  answers: Array<TermType>,
  samplePhrase: SamplePhraseType
}

type QuestionType = {
  id?: number,
  term: string,
  phrase: string,
  answers: Array<string>
}

type PaperSheetType = {
  id?: number,
  questions: Array<QuestionType>
}

type CharacterType = {
  id: number,
  name?: String
}

type MessageType = {
  content: String,
  characterId: number
}

type ConversationType = {
  title?: String,
  description?: String,
  messages: Array<MessageType>
}

type QuestionInputObject = {
  term: string,
  phrase: string,
  answers: Array<string>
}

type TermInputObject = {
  term: string,
  meaning?: string,
  reading?: string
}

export type {
  TermType,
  SamplePhraseType,
  PaperSheetType$ChosenQuestion,
  QuestionType,
  PaperSheetType,
  CharacterType,
  MessageType,
  ConversationType,
  TermInputObject,
  QuestionInputObject
}